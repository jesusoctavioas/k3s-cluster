---
- name: Distribution Setup
  hosts: cluster
  become: true
  gather_facts: true
  vars:
    device_name: ASMedia
    provisioning_rule:
      - ACTION=="add|change"
      - ATTRS{idVendor}=="{{ attributes[0] }}"
      - ATTRS{idProduct}=="{{ attributes[1] }}"
      - SUBSYSTEM=="scsi_disk"
      - ATTR{provisioning_mode}="unmap"
  tasks:
    - name: Upgrade distribution
      ansible.builtin.replace:
        path: '{{ item }}'
        regexp: bullseye
        replace: bookworm
      loop:
        - /etc/apt/sources.list
        - /etc/apt/sources.list.d/raspi.list

    - name: Upgrade distribution packages
      ansible.builtin.apt:
        upgrade: dist
        state: fixed
        autoremove: true
        update_cache: true

    - name: Set device id
      ansible.builtin.command:
        cmd: lsusb -s 2:2
      changed_when: device_id.stdout.find(device_name) != -1
      register: device_id

    - name: Set device attributes
      ansible.builtin.set_fact:
        attributes: "{{ device_id.stdout | regex_search('ID\\s+(.*)\\s+' + device_name, '\\1') | join | trim | split(':') }}"

    - name: Set provisioning rule
      ansible.builtin.lineinfile:
        line: "{{ provisioning_rule | join(', ') }}"
        path: /etc/udev/rules.d/10-provisioning.rules
        regexp: ^ACTION
        owner: root
        group: root
        mode: '0644'
        create: true
      when: attributes is iterable and (attributes | length == 2)

    - name: Start fstrim.timer
      ansible.builtin.systemd_service:
        name: fstrim.timer
        state: started
        enabled: true
      when: attributes is iterable and (attributes | length == 2)

    - name: Reboot
      ansible.builtin.reboot:
        post_reboot_delay: 30

    - name: Trim disk
      ansible.builtin.command:
        cmd: fstrim -v /
      changed_when: command.stdout.find('trimmed') != -1
      register: command
