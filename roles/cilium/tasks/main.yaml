---
- name: Import facts
  ansible.builtin.import_role:
    name: k3s
    tasks_from: facts

- name: Install Dependencies
  when: ansible_host in k3s_server_hosts
  block:
    - name: Set binary fact
      ansible.builtin.set_fact:
        binary:
          - org: cilium
            repo: cilium-cli
            version: '{{ cilium_vars.version.cli }}'
            name: cilium-linux-arm64.tar.gz
          - org: cilium
            repo: hubble
            version: '{{ cilium_vars.version.hubble }}'
            name: hubble-linux-arm64.tar.gz
      run_once: true

    - name: Download archive
      ansible.builtin.get_url:
        url: https://github.com/{{ item.org }}/{{ item.repo }}/releases/download/{{ item.version }}/{{ item.name }}
        checksum: sha256:https://github.com/{{ item.org }}/{{ item.repo }}/releases/download/{{ item.version }}/{{ item.name }}.sha256sum
        dest: /tmp
        owner: root
        group: root
        mode: '0644'
      loop: '{{ binary }}'

    - name: Install binary
      ansible.builtin.unarchive:
        src: /tmp/{{ item.name }}
        dest: /usr/local/bin
        owner: root
        group: root
        mode: '0755'
        remote_src: true
      loop: '{{ binary }}'

    - name: Delete archive
      ansible.builtin.file:
        path: /tmp/{{ item.name }}
        state: absent
      loop: '{{ binary }}'

    - name: Add repository
      kubernetes.core.helm_repository:
        name: cilium
        repo_url: https://helm.cilium.io

- name: Chart Setup
  when: ansible_host == k3s_server_default_host
  block:
    - name: Apply gateway api crds manifest
      kubernetes.core.k8s:
        kubeconfig: '{{ k3s_vars.directory.config }}/k3s.yaml'
        src: https://github.com/kubernetes-sigs/gateway-api/releases/download/{{ cilium_vars.kubernetes.gateway.api.version }}/experimental-install.yaml
        state: present

    - name: Install chart
      kubernetes.core.helm:
        chart_ref: cilium/cilium
        chart_version: '{{ cilium_vars.version.chart }}'
        kubeconfig: '{{ k3s_vars.directory.config }}/k3s.yaml'
        name: cilium
        namespace: kube-system
        update_repo_cache: true
        values:
          bgpControlPlane:
            enabled: true
          enableCiliumEndpointSlice: true
          envoy:
            enabled: true
            resources:
              limits:
                cpu: 400m
                memory: 256Mi
              requests:
                cpu: 100m
                memory: 64Mi
            rollOutPods: true
          externalIPs:
            enabled: true
          gatewayAPI:
            default: true
            enabled: true
          ipam:
            operator:
              clusterPoolIPv4PodCIDRList: '{{ cilium_vars.pod.ip.pool }}'
          hubble:
            relay:
              enabled: true
              rollOutPods: true
            ui:
              enabled: true
              rollOutPods: true
          k8sClientRateLimit:
            burst: 100
            qps: 50
          k8sServiceHost: '{{ k3s_vars.loadbalancer.server.host }}'
          k8sServicePort: '{{ k3s_vars.loadbalancer.server.port }}'
          kubeProxyReplacement: true
          l2announcements:
            enabled: true
          loadBalancer:
            l7:
              backend: envoy
          operator:
            resources:
              limits:
                cpu: 200m
                memory: 128Mi
              requests:
                cpu: 100m
                memory: 64Mi
            rollOutPods: true
          rollOutCiliumPods: true
        wait: true

    - name: Apply l2 announcement policy manifest
      kubernetes.core.k8s:
        definition:
          apiVersion: cilium.io/v2alpha1
          kind: CiliumL2AnnouncementPolicy
          metadata:
            name: default-l2-announcement-policy
            namespace: kube-system
          spec:
            externalIPs: true
            interfaces:
              - '{{ k3s_vars.network.interface }}'
            loadBalancerIPs: true
        kubeconfig: '{{ k3s_vars.directory.config }}/k3s.yaml'
        state: present

    - name: Apply loadbalancer ip pool manifest
      kubernetes.core.k8s:
        definition:
          apiVersion: cilium.io/v2alpha1
          kind: CiliumLoadBalancerIPPool
          metadata:
            name: default-pool
            namespace: kube-system
          spec:
            cidrs:
              - cidr: '{{ cilium_vars.loadbalancer.ip.pool }}'
        kubeconfig: '{{ k3s_vars.directory.config }}/k3s.yaml'
        state: present
