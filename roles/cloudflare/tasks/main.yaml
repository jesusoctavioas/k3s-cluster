---
- name: Import facts
  ansible.builtin.import_role:
    name: '{{ item }}'
    tasks_from: facts
  loop:
    - cluster
    - k3s

- name: Cloudflare Setup
  when: ansible_host == k3s_server_default_host
  block:
    - name: Create secret
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: cloudflare-api-token
            namespace: kube-system
          stringData:
            token: '{{ cloudflare_vars.api.token }}'
          type: Opaque
        kubeconfig: '{{ k3s_vars.directory.config }}/k3s.yaml'

    - name: Create cluster issuer
      kubernetes.core.k8s:
        definition:
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: cloudflare-cluster-issuer
            namespace: kube-system
          spec:
            acme:
              email: '{{ cluster_mail_user_alias }}'
              privateKeySecretRef:
                name: cloudflare-tls-key
              server: https://acme-v02.api.letsencrypt.org/directory
              solvers:
                - dns01:
                    cloudflare:
                      apiTokenSecretRef:
                        key: token
                        name: cloudflare-api-token
        kubeconfig: '{{ k3s_vars.directory.config }}/k3s.yaml'

    - name: Create gateway
      kubernetes.core.k8s:
        definition:
          apiVersion: gateway.networking.k8s.io/v1
          kind: Gateway
          metadata:
            annotations:
              cert-manager.io/cluster-issuer: cloudflare-cluster-issuer
            name: cilium-gateway
            namespace: kube-system
          spec:
            gatewayClassName: cilium
            listeners:
              - protocol: HTTPS
                port: 443
                name: https-gateway
                hostname: '{{ cloudflare_vars.gateway.hostname }}'
                tls:
                  certificateRefs:
                    - kind: Secret
                      name: cloudflare-tls-certificate
                allowedRoutes:
                  namespaces:
                    from: All
        kubeconfig: '{{ k3s_vars.directory.config }}/k3s.yaml'
