---
- name: Set device id
  ansible.builtin.command:
    cmd: lsusb -s {{ cluster_device_id }}
  changed_when: device_id.stdout.find(cluster_device_name) != -1
  register: device_id

- name: Trim Device
  when: device_id.stdout.find(cluster_device_name) != -1
  block:
    - name: Set device attributes
      ansible.builtin.set_fact:
        attributes: "{{ device_id.stdout | regex_search('ID\\s+(.*)\\s+' + cluster_device_name, '\\1') | join | trim | split(':') }}"

    - name: Enable Trim
      when: attributes is iterable and (attributes | length == 2)
      block:
        - name: Set device rule
          ansible.builtin.set_fact:
            device_rule:
              - ACTION=="add|change"
              - ATTRS{idVendor}=="{{ attributes[0] }}"
              - ATTRS{idProduct}=="{{ attributes[1] }}"
              - SUBSYSTEM=="scsi_disk"
              - ATTR{provisioning_mode}="unmap"

        - name: Setup Device
          notify: Reboot
          block:
            - name: Create device rule
              ansible.builtin.lineinfile:
                path: /etc/udev/rules.d/10-unmap.fstrim.rules
                line: "{{ device_rule | join(', ') }}"
                regexp: ^ACTION
                owner: root
                group: root
                mode: '0644'
                create: true

            - name: Start fstrim.timer
              ansible.builtin.systemd_service:
                name: fstrim.timer
                state: started
                enabled: true
