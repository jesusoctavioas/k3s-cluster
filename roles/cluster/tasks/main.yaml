---
- name: Cluster Provisioning
  when: raspberry_pi | default(false)
  block:
    - name: Upgrade distribution packages
      ansible.builtin.apt:
        autoremove: true
        update_cache: true
        upgrade: dist

    - name: Set boot from USB if available
      ansible.builtin.command:
        cmd: raspi-config nonint do_boot_behaviour B2
      changed_when: false

    - name: Set wifi country code
      ansible.builtin.command:
        cmd: raspi-config nonint do_wifi_country {{ cluster_country_code }}
      changed_when: false

    - name: Disable bluetooth service
      ansible.builtin.systemd_service:
        enabled: false
        name: "{{ item }}.service"
      loop:
        - bluetooth
        - hciuart
      when: cluster_disable_service_bluetooth | default(false)

    - name: Disable wifi service
      ansible.builtin.systemd_service:
        enabled: false
        name: wpa_supplicant.service
      when: cluster_disable_service_wifi | default(false)

    - name: Enable memory cgroup
      ansible.builtin.lineinfile:
        backrefs: true
        path: /boot/cmdline.txt
        regexp: ^((?!.*\bcgroup_memory=1\b).*)$
        line: \g<1> cgroup_memory=1 cgroup_enable=memory
        state: present
      notify: Perform reboot
      register: cmdline

    - name: Update bootloader firmware
      ansible.builtin.command:
        cmd: rpi-eeprom-update -ad
      changed_when: eeprom_update.stdout.find('updates pending') != -1
      notify: Perform reboot
      register: eeprom_update

    - name: Check reboot status
      ansible.builtin.stat:
        path: /var/run/reboot-required
        get_checksum: false
      changed_when: reboot.stat.exists
      notify: Perform reboot
      register: reboot
