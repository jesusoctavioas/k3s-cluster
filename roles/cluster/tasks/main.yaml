---
- name: Import validation tasks
  ansible.builtin.import_tasks:
    file: validation.yaml

- name: Import user tasks
  ansible.builtin.import_tasks:
    file: user.yaml

- name: Cluster Provisioning
  when: raspberry_pi | default(false)
  block:
    - name: Set boot from USB if available
      ansible.builtin.command:
        cmd: raspi-config nonint do_boot_behaviour B2
      changed_when: boot_behaviour.stdout | length > 0
      register: boot_behaviour

    - name: Set wifi country code
      ansible.builtin.command:
        cmd: raspi-config nonint do_wifi_country {{ cluster_country_code }}
      changed_when: wifi_country.stdout | length > 0
      register: wifi_country

    - name: Disable bluetooth service
      ansible.builtin.systemd_service:
        name: '{{ item }}.service'
        state: stopped
        enabled: false
      loop:
        - bluetooth
        - hciuart
      when: cluster_disable_service_bluetooth | default(false)

    - name: Disable wifi service
      ansible.builtin.systemd_service:
        name: wpa_supplicant.service
        state: stopped
        enabled: false
      when: cluster_disable_service_wifi | default(false)

    - name: Enable memory cgroup
      ansible.builtin.lineinfile:
        path: /boot/cmdline.txt
        line: \g<1> cgroup_memory=1 cgroup_enable=memory
        regexp: ^((?!.*\bcgroup_memory=1\b).*)$
        backrefs: true
      notify: Reboot
      register: cmdline

    - name: Set disks provisioning
      ansible.builtin.import_tasks:
        file: provisioning.yaml

    - name: Upgrade distribution
      ansible.builtin.import_tasks:
        file: upgrade.yaml

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Trim disks
  ansible.builtin.command:
    cmd: fstrim -v /
  changed_when: command.stdout.find('trimmed') != -1
  register: command
  when: trim_disks in ['y', 'Y']
