---
- name: Set agent fact
  ansible.builtin.set_fact:
    k3s_agent: "{{ 'agent' if ansible_play_role_names[0] == 'node' else 'server' }}"

# - name: Debug
#   ansible.builtin.debug:
#     msg: "agent: {{ k3s_agent }}"

- name: Set high-availability fact
  ansible.builtin.set_fact:
    k3s_ha: "{{ (groups['control'] | length > 1) | default(false) }}"

- name: Set host fact
  ansible.builtin.set_fact:
    k3s_host: "{{ hostvars[groups['control'][0]]['ansible_host'] | default(groups['control'][0]) }}"

- name: Set service fact
  ansible.builtin.set_fact:
    k3s_service: k3s{{ '-agent' if ansible_play_role_names[0] == 'node' }}

- name: Set token fact
  ansible.builtin.set_fact:
    k3s_token: "{{ hostvars[groups['control'][0]]['token'] | default('') }}"

- name: Download binary
  ansible.builtin.get_url:
    url: https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/k3s-arm64
    checksum: sha256:https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/sha256sum-arm64.txt
    dest: /usr/local/bin/k3s
    owner: root
    group: root
    mode: 0755

- name: Create configuration directory
  ansible.builtin.file:
    path: "{{ k3s_conf_dir }}"
    mode: 0755
    owner: root
    group: root
    state: directory

- name: Create configuration file
  ansible.builtin.template:
    src: config.j2
    dest: "{{ k3s_conf_dir }}/config.yaml"
    mode: 0600
    owner: root
    group: root
  notify: Start service

- name: Create service file
  ansible.builtin.template:
    src: service.j2
    dest: /etc/systemd/system/{{ k3s_service }}.service
    mode: 0644
    owner: root
    group: root
  notify: Start service

- name: Create service environment file
  ansible.builtin.file:
    access_time: preserve
    mode: 0600
    modification_time: preserve
    path: /etc/systemd/system/{{ k3s_service }}.service.env
    state: touch
  notify: Start service

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
