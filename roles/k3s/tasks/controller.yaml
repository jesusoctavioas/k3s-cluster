---
- name: Set facts
  ansible.builtin.import_tasks:
    file: facts.yaml

- name: System Upgrade Controller
  when: ansible_host == k3s_default_host
  block:
    - name: Install namespace manifest
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: upgrade-system
            labels:
              pod-security.kubernetes.io/enforce: privileged
        kubeconfig: '{{ k3s_conf_dir }}/k3s.yaml'

    - name: Install service account manifest
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: upgrade-system
            namespace: upgrade-system
        kubeconfig: '{{ k3s_conf_dir }}/k3s.yaml'

    - name: Install cluster role binding manifest
      kubernetes.core.k8s:
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: upgrade-system
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: cluster-admin
          subjects:
            - kind: ServiceAccount
              name: upgrade-system
              namespace: upgrade-system
        kubeconfig: '{{ k3s_conf_dir }}/k3s.yaml'

    - name: Install config map manifest
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: default-controller-env
            namespace: upgrade-system
          data:
            SYSTEM_UPGRADE_CONTROLLER_DEBUG: 'false'
            SYSTEM_UPGRADE_CONTROLLER_THREADS: '2'
            SYSTEM_UPGRADE_JOB_ACTIVE_DEADLINE_SECONDS: '900'
            SYSTEM_UPGRADE_JOB_BACKOFF_LIMIT: '99'
            SYSTEM_UPGRADE_JOB_IMAGE_PULL_POLICY: 'Always'
            SYSTEM_UPGRADE_JOB_KUBECTL_IMAGE: 'rancher/kubectl:{{ k3s_version_kubectl }}'
            SYSTEM_UPGRADE_JOB_PRIVILEGED: 'true'
            SYSTEM_UPGRADE_JOB_TTL_SECONDS_AFTER_FINISH: '900'
            SYSTEM_UPGRADE_PLAN_POLLING_INTERVAL: '15m'
        kubeconfig: '{{ k3s_conf_dir }}/k3s.yaml'

    - name: Install deployment manifest
      kubernetes.core.k8s:
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: upgrade-system-controller
            namespace: upgrade-system
          spec:
            selector:
              matchLabels:
                upgrade.cattle.io/controller: upgrade-system-controller
            template:
              metadata:
                labels:
                  upgrade.cattle.io/controller: upgrade-system-controller
              spec:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                        - matchExpressions:
                            - key: 'node-role.kubernetes.io/control-plane'
                              operator: 'Exists'
                serviceAccountName: upgrade-system
                tolerations:
                  - key: 'CriticalAddonsOnly'
                    operator: 'Exists'
                  - key: 'node-role.kubernetes.io/master'
                    operator: 'Exists'
                    effect: 'NoSchedule'
                  - key: 'node-role.kubernetes.io/controlplane'
                    operator: 'Exists'
                    effect: 'NoSchedule'
                  - key: 'node-role.kubernetes.io/control-plane'
                    operator: 'Exists'
                    effect: 'NoSchedule'
                  - key: 'node-role.kubernetes.io/etcd'
                    operator: 'Exists'
                    effect: 'NoExecute'
                containers:
                  - name: upgrade-system-controller
                    image: rancher/upgrade-system-controller:{{ k3s_version_controller }}
                    imagePullPolicy: IfNotPresent
                    securityContext:
                      runAsNonRoot: true
                      runAsUser: 65534
                      runAsGroup: 65534
                      allowPrivilegeEscalation: false
                      seccompProfile:
                        type: RuntimeDefault
                      capabilities:
                        drop:
                          - ALL
                    envFrom:
                      - configMapRef:
                          name: default-controller-env
                    env:
                      - name: SYSTEM_UPGRADE_CONTROLLER_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.labels['upgrade.cattle.io/controller']
                      - name: SYSTEM_UPGRADE_CONTROLLER_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                    volumeMounts:
                      - name: etc-ssl
                        mountPath: /etc/ssl
                        readOnly: true
                      - name: etc-pki
                        mountPath: /etc/pki
                        readOnly: true
                      - name: etc-ca-certificates
                        mountPath: /etc/ca-certificates
                        readOnly: true
                      - name: tmp
                        mountPath: /tmp
                volumes:
                  - name: etc-ssl
                    hostPath:
                      path: /etc/ssl
                      type: DirectoryOrCreate
                  - name: etc-pki
                    hostPath:
                      path: /etc/pki
                      type: DirectoryOrCreate
                  - name: etc-ca-certificates
                    hostPath:
                      path: /etc/ca-certificates
                      type: DirectoryOrCreate
                  - name: tmp
                    emptyDir: {}
        kubeconfig: '{{ k3s_conf_dir }}/k3s.yaml'
