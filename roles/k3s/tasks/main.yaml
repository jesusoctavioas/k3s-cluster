---
- name: Set facts
  ansible.builtin.import_tasks:
    file: facts.yaml

- name: Service Setup
  notify: Start service
  block:
    - name: Install k3s binary
      ansible.builtin.get_url:
        url: https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/k3s-arm64
        checksum: sha256:https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/sha256sum-arm64.txt
        dest: /usr/local/bin/k3s
        owner: root
        group: root
        mode: '0755'

    - name: Create configuration directory
      ansible.builtin.file:
        path: '{{ k3s_dir_config }}'
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Create configuration file
      ansible.builtin.template:
        src: config.j2
        dest: '{{ k3s_dir_config }}/config.yaml'
        owner: root
        group: root
        mode: '0600'

    - name: Create service file
      ansible.builtin.template:
        src: service.j2
        dest: /etc/systemd/system/{{ k3s_service_name }}.service
        owner: root
        group: root
        mode: '0644'

    - name: Create service environment file
      ansible.builtin.file:
        path: /etc/systemd/system/{{ k3s_service_name }}.service.env
        access_time: preserve
        modification_time: preserve
        state: touch
        owner: root
        group: root
        mode: '0600'

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Server Setup
  when: ansible_host in k3s_server_hosts
  block:
    - name: Add variable to environment
      ansible.builtin.lineinfile:
        path: /etc/environment
        line: KUBECONFIG={{ k3s_dir_config }}/k3s.yaml
        regexp: ^KUBECONFIG

    - name: Create symlinks
      ansible.builtin.file:
        src: /usr/local/bin/k3s
        dest: /usr/local/bin/{{ item }}
        state: link
      loop:
        - crictl
        - ctr
        - kubectl

    - name: Wait for drained port
      ansible.builtin.wait_for:
        port: '{{ k3s_api_port }}'
        state: drained

    - name: Set Token
      when: k3s_token | length == 0
      block:
        - name: Wait for token creation
          ansible.builtin.wait_for:
            path: '{{ k3s_dir_lib }}/server/node-token'

        - name: Read token
          ansible.builtin.slurp:
            path: '{{ k3s_dir_lib }}/server/node-token'
          register: node_token

        - name: Set token fact
          ansible.builtin.set_fact:
            token: "{{ node_token.content | b64decode | trim }}"
          run_once: true

    - name: Get user info
      ansible.builtin.user:
        name: '{{ ansible_user }}'
      register: user_info

    - name: Create local kubeconfig directory
      ansible.builtin.file:
        path: '{{ user_info.home }}/.kube'
        owner: '{{ user_info.name }}'
        group: '{{ user_info.name }}'
        mode: '0755'
        state: directory

    - name: Copy kubeconfig file
      ansible.builtin.copy:
        src: '{{ k3s_dir_config }}/k3s.yaml'
        dest: '{{ user_info.home }}/.kube/config'
        owner: '{{ user_info.name }}'
        group: '{{ user_info.name }}'
        mode: '0600'
        remote_src: true

    - name: Set kubeconfig host
      ansible.builtin.command:
        cmd: kubectl config set-cluster default
              --kubeconfig={{ user_info.home }}/.kube/config
              --server=https://{{ k3s_api_host if k3s_loadbalancer_enabled else ansible_host }}:{{ k3s_api_port }}
      changed_when: true
