---
- name: Import facts
  ansible.builtin.import_role:
    name: k3s
    tasks_from: facts

- name: Add repository
  kubernetes.core.helm_repository:
    name: prometheus
    repo_url: https://prometheus-community.github.io/helm-charts

- name: Chart Setup
  when: ansible_host == k3s_server_default_host
  block:
    - name: Create namespace
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: monitoring-system
        kubeconfig: '{{ k3s_dir_config }}/k3s.yaml'

    - name: Create secret
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: grafana-credentials
            namespace: monitoring-system
          stringData:
            password: '{{ prometheus_grafana_user_password }}'
            username: '{{ prometheus_grafana_user_name }}'
          type: Opaque
        kubeconfig: '{{ k3s_dir_config }}/k3s.yaml'

    - name: Install chart
      kubernetes.core.helm:
        chart_ref: prometheus/kube-prometheus-stack
        chart_version: '{{ prometheus_version_chart }}'
        kubeconfig: '{{ k3s_dir_config }}/k3s.yaml'
        name: monitoring
        namespace: monitoring-system
        update_repo_cache: true
        values:
          alertmanager:
            alertmanagerSpec:
              storage:
                volumeClaimTemplate:
                  spec:
                    storageClassName: longhorn
                    accessModes:
                      - ReadWriteOnce
                    resources:
                      requests:
                        storage: 5Gi
          grafana:
            admin:
              existingSecret: grafana-credentials
              passwordKey: password
              userKey: username
          kubeControllerManager:
            endpoints: '{{ k3s_server_ips }}'
          kubeEtcd:
            endpoints: '{{ k3s_server_ips }}'
          kubeProxy:
            endpoints: '{{ k3s_server_ips }}'
          kubeScheduler:
            endpoints: '{{ k3s_server_ips }}'
          prometheus:
            prometheusSpec:
              enableAdminAPI: true
              replicaExternalLabelName: replica
              serviceMonitorSelectorNilUsesHelmValues: false
              storageSpec:
                volumeClaimTemplate:
                  spec:
                    storageClassName: longhorn
                    accessModes:
                      - ReadWriteOnce
                    resources:
                      requests:
                        storage: 50Gi
          prometheus-node-exporter:
            resources:
              limits:
                cpu: 400m
                memory: 256Mi
              requests:
                cpu: 100m
                memory: 64Mi
        wait: true

    - name: Set monitoring-grafana loadbalancer ip
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: monitoring-grafana
            namespace: monitoring-system
            annotations:
              io.cilium/lb-ipam-ips: '{{ prometheus_loadbalancer_ip_grafana }}'
              io.cilium/lb-ipam-sharing-key: monitoring-grafana
          spec:
            selector:
              app.kubernetes.io/instance: monitoring
              app.kubernetes.io/name: grafana
            type: LoadBalancer
        kubeconfig: '{{ k3s_dir_config }}/k3s.yaml'
